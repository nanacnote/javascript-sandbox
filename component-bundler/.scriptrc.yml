new_component:
  - style: |
      import styled, {css} from 'styled-components';
      import {{{IPROPS}}} from '..';

      import colors from '@shared/colors';

      export default styled.span<Partial<{{IPROPS}}>>`
          position: relative;
          display: inline-flex;
          border: solid 1px red;
      `;

  - stories: |
      import React from 'react';
      import {Story, Meta} from '@storybook/react/types-6-0';

      import {{{NAME}}, {{IPROPS}}} from '.';

      export default {
        title: 'Components/{{NAME}}',
        component: {{NAME}},
        parameters: {actions: {argTypesRegex: '^(before|on).*'}},
        argTypes: {},
      } as Meta;

      const Template: Story<{{IPROPS}}> = args => <{{NAME}} {...args} />;

      export const Default = Template.bind({});
      Default.args = {};

  - index: |
      import React from 'react';

      import Fragment from './style/Fragment';

      export interface {{IPROPS}} {
        /**
        * Sets a custom class to root of component.
        */
        className?: string;
        /**
        * Sets children component
        */
        children?: React.ReactNode;
      }

      /**
      * {{DESCRIPTION}}
      */
      export const {{NAME}} = ({
        className,
        children,
        ...props
      }: {{IPROPS}}) => (
        <>
          <Fragment>{children}</Fragment>
        </>
      );

add_svg:
  - gradient: |
      <defs>
        <linearGradient id="gradient" x1="19.7394227%" y1="11.7134515%" x2="92.322882%" y2="83.3183851%">
          <stop stop-color="#F54747" offset="0%"></stop>
          <stop stop-color="#FAA768" offset="23.7588949%"></stop>
          <stop stop-color="#EC86D7" offset="50.0555612%"></stop>
          <stop stop-color="#7EC3F5" offset="100%"></stop>
        </linearGradient>s
      </defs>
  - stories: |
      /**
      *
      * @author Owusu K <adjeibohyen@hotmail.co.uk>
      *
      *
      * @notes This is an auto generated component and preferably should not be
      * edited directly refer to readme under `dev helpers` it is generated by
      * running `yarn add-svg`
      */
      import React from 'react';
      import {Story, Meta} from '@storybook/react/types-6-0';

      import {Svg, SvgProps} from '.';

      export default {
        title: 'Components/Svg',
        component: Svg,
        parameters: {actions: {argTypesRegex: '^(before|on).*'}},
        argTypes: {},
      } as Meta;

      const Template: Story<SvgProps> = args => <Svg {...args} />;

      {{STORY}}

  - index: |
      /**
      *
      * @author Owusu K <adjeibohyen@hotmail.co.uk>
      *
      *
      * @notes This is an auto generated component and preferably should not be
      * edited directly refer to readme under `dev helpers` it is generated by
      * running `yarn add-svg`
      */
      import React from 'react';
      import colors from '@shared/colors';

      {{IMPORTS}}

      const I = {
        {{DICTIONARY}}
      };

      export interface SvgProps {
        /**
        * Sets a custom class to root of svg component
        */
        className?: string;
        /**
        * Name of svg image
        */
        name: keyof typeof I;
        /**
        * Sets predefined button size by way of padding of the button
        */
        size?: 's' | 'm' | 'l';
        /**
        * Sets height of svg image (note add units eg 10px | 10% | 10em) defaults to 1em
        */
        width?: string;
        /**
        * Sets width of svg image (note add units eg 10px | 10% | 10em) defaults to 1em
        */
        height?: string;
        /**
        * Sets the color of svg according to the `color palette`
        * Quoted hex color values are also accepted
        * For the default gradient set this to `gradient`
        */
        color?: 'gradient' | keyof typeof colors['hex'] | string;
      }

      /**
      * React svg component
      */
      export const Svg = ({
        className,
        name,
        size,
        width,
        height,
        color,
        ...props
      }: SvgProps) => {
        const Svg = I[name] || I['_fallback'];
        const sizeValue =
          (size === 's' && '1.5em') ||
          (size === 'm' && '1.75em') ||
          (size === 'l' && '2em');


        return (
          <Svg
            className={className}
            width={width || sizeValue || '1em'}
            height={height || sizeValue || '1em'}
            color={colors.hex[color] || color}
            {...props}
          />
        );
      };
